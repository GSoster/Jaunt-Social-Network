Style guide to follow: http://guide.meteor.com/code-style.html#meteor-features

text-editor configurations:
https://atom.io/packages/meteor-api

#ROUTES
It is important to note that pages that work with routes should get their vars (helpers)
from the router and not from a helper.js


Methods and Calls
Methods -> functions in the server that will be called on the client.
Call -> call specific functions encapsuled in methods.


#CSS classes:
    -> that will be used as JS selector need to have js in the beginning plus a underscore and the following letter should be lowercase: js-    myTimeline.

#HTML render in templates
Use {{{field}}} instead of {{field}} in your HTML template if you want the HTML code in field to be interpreted as HTML code (and not escaped).


#Collections:
    -> Collections should be named as a plural noun. ex.:   Lists = new Mongo.Collection('Lists');
    -> Fields in the database should be camelCased just like your JavaScript variable names. ex.: Widgets.insert({myFieldName: 'Hello!'});

#Method and publication
    -> Method and publication names should be camelCased, and namespaced to the module they are in: Meteor.publish('lists.public', function         listsPublic() {});

#Templates: name your Blaze templates with the full path to the namespace, separated by underscores. ex.:<template name="Lists_show">

#########################################
###Directories and Files descriptions####
#########################################

/client -> contains all code that will be sent to the cliet.

/models -> code related with collections

/public -> content that is served 'as is', resourses, images, etc.

/shared -> code shared between server and client

/server -> server specific code

#########################################
      ###Gamification Model####
#########################################
#Points:
  -> User collection stores max number of points and actual amount of points
  -> One post from user will generate 3 points.
  -> One comment from user will generate 1 point.

#Achievements:
  -There will be two categories of achievements: Posts, Friendship number
    ->Posts will count how many posts the user has and give him an achievement if necessary.
    ->Friendship number will count how many friends and five to the user an achievement if necessary.
